{%- let section = "# =============================================================================\n#" -%}
{%- let not_configured = "# -- not configured --" -%}

# shellcheck shell=sh

{{ section }}
# Utility functions for querypath.
#

# pwd based on the value of _QP_RESOLVE_SYMLINKS.
__querypath_pwd() {
{%- if cfg!(windows) %}
    \command cygpath -w "$(\builtin pwd -P)"
{%- else if resolve_symlinks %}
    \command pwd -P
{%- else %}
    \command pwd -L
{%- endif %}
}

# cd + custom logic based on the value of _QP_ECHO.
__querypath_cd() {
    # shellcheck disable=SC2164
    \command cd "$@" {%- if echo %} && __querypath_pwd {%- endif %}
}

{{ section }}
# Hook configuration for querypath.
#

{% match hook %}
{%- when InitHook::None -%}
{{ not_configured }}

{%- when InitHook::Prompt -%}
# Hook to add new entries to the database.
__querypath_hook() {
    \command querypath add -- "$(__querypath_pwd || \builtin true)"
}

# Initialize hook.
if [ "${PS1:=}" = "${PS1#*\$(__querypath_hook)}" ]; then
    PS1="${PS1}\$(__querypath_hook)"
fi

# Report common issues.
__querypath_doctor() {
{%- if hook != InitHook::Prompt %}
    return 0
{%- else %}
    [ "${_QP_DOCTOR:-1}" -eq 0 ] && return 0
    case "${PS1:-}" in
    *__querypath_hook*) return 0 ;;
    *) ;;
    esac

    _QP_DOCTOR=0
    \command printf '%s\n' \
        'querypath: detected a possible configuration issue.' \
        'Please ensure that querypath is initialized right at the end of your shell configuration file.' \
        '' \
        'If the issue persists, consider filing an issue at:' \
        'https://github.com/dimarogiv/querypath/issues' \
        '' \
        'Disable this message by setting _QP_DOCTOR=0.' \
        '' >&2
{%- endif %}
}

{%- when InitHook::Pwd -%}
\command printf "%s\n%s\n" \
    "querypath: PWD hooks are not supported on POSIX shells." \
    "        Use 'querypath init posix --hook prompt' instead."

{%- endmatch %}

{{ section }}
# When using querypath with --no-cmd, alias these internal functions as desired.
#

# Jump to a directory using only keywords.
__querypath_z() {
    __querypath_doctor

    if [ "$#" -eq 0 ]; then
        __querypath_cd ~
    elif [ "$#" -eq 1 ] && [ "$1" = '-' ]; then
        if [ -n "${OLDPWD}" ]; then
            __querypath_cd "${OLDPWD}"
        else
            # shellcheck disable=SC2016
            \command printf 'querypath: $OLDPWD is not set'
            return 1
        fi
    elif [ "$#" -eq 1 ] && [ -d "$1" ]; then
        __querypath_cd "$1"
    else
        __querypath_result="$(\command querypath query --exclude "$(__querypath_pwd || \builtin true)" -- "$@")" &&
            __querypath_cd "${__querypath_result}"
    fi
}

# Jump to a directory using interactive search.
__querypath_zi() {
    __querypath_doctor
    __querypath_result="$(\command querypath query --interactive -- "$@")" && __querypath_cd "${__querypath_result}"
}

{{ section }}
# Commands for querypath. Disable these using --no-cmd.
#

{%- match cmd %}
{%- when Some with (cmd) %}

\command unalias {{cmd}} >/dev/null 2>&1 || \true
{{cmd}}() {
    __querypath_z "$@"
}

\command unalias {{cmd}}i >/dev/null 2>&1 || \true
{{cmd}}i() {
    __querypath_zi "$@"
}

{%- when None %}

{{ not_configured }}

{%- endmatch %}

{{ section }}
# To initialize querypath, add this to your configuration:
#
# eval "$(querypath init posix --hook prompt)"
