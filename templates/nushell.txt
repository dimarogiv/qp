{%- let section = "# =============================================================================\n#" -%}
{%- let not_configured = "# -- not configured --" -%}

# Code generated by querypath. DO NOT EDIT.

{{ section }}
# Hook configuration for querypath.
#

{% if hook == InitHook::None -%}
{{ not_configured }}

{%- else -%}
# Initialize hook to add new entries to the database.
export-env {
{%- if hook == InitHook::Prompt %}
  $env.config = (
    $env.config?
    | default {}
    | upsert hooks { default {} }
    | upsert hooks.pre_prompt { default [] }
  )
  let __querypath_hooked = (
    $env.config.hooks.pre_prompt | any { try { get __querypath_hook } catch { false } }
  )
  if not $__querypath_hooked {
    $env.config.hooks.pre_prompt = ($env.config.hooks.pre_prompt | append {
      __querypath_hook: true,
      code: {|| ^querypath add -- $env.PWD}
    })
  }
{%- else if hook == InitHook::Pwd %}
  $env.config = (
    $env.config?
    | default {}
    | upsert hooks { default {} }
    | upsert hooks.env_change { default {} }
    | upsert hooks.env_change.PWD { default [] }
  )
  let __querypath_hooked = (
    $env.config.hooks.env_change.PWD | any { try { get __querypath_hook } catch { false } }
  )
  if not $__querypath_hooked {
    $env.config.hooks.env_change.PWD = ($env.config.hooks.env_change.PWD | append {
      __querypath_hook: true,
      code: {|_, dir| ^querypath add -- $dir}
    })
  }
{%- endif %}
}

{%- endif %}

{{ section }}
# When using querypath with --no-cmd, alias these internal functions as desired.
#

# Jump to a directory using only keywords.
def --env --wrapped __querypath_z [...rest: string] {
  let path = match $rest {
    [] => {'~'},
    [ '-' ] => {'-'},
    [ $arg ] if ($arg | path expand | path type) == 'dir' => {$arg}
    _ => {
      ^querypath query --exclude $env.PWD -- ...$rest | str trim -r -c "\n"
    }
  }
  cd $path
{%- if echo %}
  echo $env.PWD
{%- endif %}
}

# Jump to a directory using interactive search.
def --env --wrapped __querypath_zi [...rest:string] {
  cd $'(^querypath query --interactive -- ...$rest | str trim -r -c "\n")'
{%- if echo %}
  echo $env.PWD
{%- endif %}
}

{{ section }}
# Commands for querypath. Disable these using --no-cmd.
#

{%- match cmd %}
{%- when Some with (cmd) %}

alias {{cmd}} = __querypath_z
alias {{cmd}}i = __querypath_zi

{%- when None %}

{{ not_configured }}

{%- endmatch %}

{{ section }}
# Add this to your env file (find it by running `$nu.env-path` in Nushell):
#
#   querypath init nushell | save -f ~/.querypath.nu
#
# Now, add this to the end of your config file (find it by running
# `$nu.config-path` in Nushell):
#
#   source ~/.querypath.nu
#
# Note: querypath only supports Nushell v0.89.0+.
