{%- let section = "# =============================================================================\n#" -%}
{%- let not_configured = "# -- not configured --" -%}

use builtin
use path

{{ section }}
# Utility functions for querypath.
#

# cd + custom logic based on the value of _QP_ECHO.
fn __querypath_cd {|path|
    builtin:cd $path
{%- if echo %}
    builtin:echo $pwd
{%- endif %}
}

{{ section }}
# Hook configuration for querypath.
#

# Initialize hook to track previous directory.
var oldpwd = $builtin:pwd
set builtin:before-chdir = [$@builtin:before-chdir {|_| set oldpwd = $builtin:pwd }]

# Initialize hook to add directories to querypath.
{%- if hook == InitHook::None %}
{{ not_configured }}

{%- else %}
if (builtin:not (builtin:eq $E:__querypath_shlvl $E:SHLVL)) {
    set E:__querypath_shlvl = $E:SHLVL
{%- if hook == InitHook::Prompt %}
    set edit:before-readline = [$@edit:before-readline {|| querypath add -- $pwd }]
{%- else if hook == InitHook::Pwd %}
    set builtin:after-chdir = [$@builtin:after-chdir {|_| querypath add -- $pwd }]
{%- endif %}
}

{%- endif %}

{{ section }}
# When using querypath with --no-cmd, alias these internal functions as desired.
#

# Jump to a directory using only keywords.
fn __querypath_z {|@rest|
    if (builtin:eq [] $rest) {
        __querypath_cd ~
    } elif (builtin:eq [-] $rest) {
        __querypath_cd $oldpwd
    } elif (and ('builtin:==' (builtin:count $rest) 1) (path:is-dir &follow-symlink=$true $rest[0])) {
        __querypath_cd $rest[0]
    } else {
        var path
        try {
            set path = (querypath query --exclude $pwd -- $@rest)
        } catch {
        } else {
            __querypath_cd $path
        }
    }
}
edit:add-var __querypath_z~ $__querypath_z~

# Jump to a directory using interactive search.
fn __querypath_zi {|@rest|
    var path
    try {
        set path = (querypath query --interactive -- $@rest)
    } catch {
    } else {
        __querypath_cd $path
    }
}
edit:add-var __querypath_zi~ $__querypath_zi~

{{ section }}
# Commands for querypath. Disable these using --no-cmd.
#

{%- match cmd %}
{%- when Some with (cmd) %}

edit:add-var {{cmd}}~ $__querypath_z~
edit:add-var {{cmd}}i~ $__querypath_zi~

# Load completions.
{#-
  querypath-based completions are currently not possible, because Elvish only prints
  a completion if the current token is a prefix of it.
#}
fn __querypath_z_complete {|@rest|
    if (!= (builtin:count $rest) 2) {
        builtin:return
    }
    edit:complete-filename $rest[1] |
        builtin:each {|completion|
            var dir = $completion[stem]
            if (path:is-dir $dir) {
                builtin:put $dir
            }
        }
}
set edit:completion:arg-completer[{{cmd}}] = $__querypath_z_complete~

{%- when None %}

{{ not_configured }}

{%- endmatch %}

{{ section }}
# To initialize querypath, add this to your configuration (usually
# ~/.elvish/rc.elv):
#
#   eval (querypath init elvish | slurp)
#
# Note: querypath only supports elvish v0.18.0 and above.
