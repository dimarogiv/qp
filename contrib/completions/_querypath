#compdef querypath

autoload -U is-at-least

_querypath() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_querypath_commands" \
"*::: :->querypath" \
&& ret=0
    case $state in
    (querypath)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:querypath-command-$line[1]:"
        case $line[1] in
            (add)
_arguments "${_arguments_options[@]}" : \
'-s+[The rank to increment the entry if it exists or initialize it with if it doesn'\''t]:SCORE:_default' \
'--score=[The rank to increment the entry if it exists or initialize it with if it doesn'\''t]:SCORE:_default' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'*::paths:_files -/' \
&& ret=0
;;
(edit)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_querypath__edit_commands" \
"*::: :->edit" \
&& ret=0

    case $state in
    (edit)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:querypath-edit-command-$line[1]:"
        case $line[1] in
            (decrement)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':path:_default' \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':path:_default' \
&& ret=0
;;
(increment)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':path:_default' \
&& ret=0
;;
(reload)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
        esac
    ;;
esac
;;
(import)
_arguments "${_arguments_options[@]}" : \
'--from=[Application to import from]:FROM:(autojump z)' \
'--merge[Merge into existing database]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':path:_files' \
&& ret=0
;;
(init)
_arguments "${_arguments_options[@]}" : \
'--cmd=[Changes the prefix of the \`z\` and \`zi\` commands]:CMD:_default' \
'--hook=[Changes how often querypath increments a directory'\''s score]:HOOK:(none prompt pwd)' \
'--no-cmd[Prevents querypath from defining the \`z\` and \`zi\` commands]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':shell:(bash elvish fish nushell posix powershell tcsh xonsh zsh)' \
&& ret=0
;;
(query)
_arguments "${_arguments_options[@]}" : \
'--exclude=[Exclude the current directory]:path:_files -/' \
'-a[Show unavailable directories]' \
'--all[Show unavailable directories]' \
'(-l --list)-i[Use interactive selection]' \
'(-l --list)--interactive[Use interactive selection]' \
'(-i --interactive)-l[List all matching directories]' \
'(-i --interactive)--list[List all matching directories]' \
'-s[Print score with results]' \
'--score[Print score with results]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'*::keywords:_default' \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'*::paths:_files -/' \
&& ret=0
;;
        esac
    ;;
esac
}

(( $+functions[_querypath_commands] )) ||
_querypath_commands() {
    local commands; commands=(
'add:Add a new directory or increment its rank' \
'edit:Edit the database' \
'import:Import entries from another application' \
'init:Generate shell configuration' \
'query:Search for a directory in the database' \
'remove:Remove a directory from the database' \
    )
    _describe -t commands 'querypath commands' commands "$@"
}
(( $+functions[_querypath__add_commands] )) ||
_querypath__add_commands() {
    local commands; commands=()
    _describe -t commands 'querypath add commands' commands "$@"
}
(( $+functions[_querypath__edit_commands] )) ||
_querypath__edit_commands() {
    local commands; commands=(
'decrement:' \
'delete:' \
'increment:' \
'reload:' \
    )
    _describe -t commands 'querypath edit commands' commands "$@"
}
(( $+functions[_querypath__edit__decrement_commands] )) ||
_querypath__edit__decrement_commands() {
    local commands; commands=()
    _describe -t commands 'querypath edit decrement commands' commands "$@"
}
(( $+functions[_querypath__edit__delete_commands] )) ||
_querypath__edit__delete_commands() {
    local commands; commands=()
    _describe -t commands 'querypath edit delete commands' commands "$@"
}
(( $+functions[_querypath__edit__increment_commands] )) ||
_querypath__edit__increment_commands() {
    local commands; commands=()
    _describe -t commands 'querypath edit increment commands' commands "$@"
}
(( $+functions[_querypath__edit__reload_commands] )) ||
_querypath__edit__reload_commands() {
    local commands; commands=()
    _describe -t commands 'querypath edit reload commands' commands "$@"
}
(( $+functions[_querypath__import_commands] )) ||
_querypath__import_commands() {
    local commands; commands=()
    _describe -t commands 'querypath import commands' commands "$@"
}
(( $+functions[_querypath__init_commands] )) ||
_querypath__init_commands() {
    local commands; commands=()
    _describe -t commands 'querypath init commands' commands "$@"
}
(( $+functions[_querypath__query_commands] )) ||
_querypath__query_commands() {
    local commands; commands=()
    _describe -t commands 'querypath query commands' commands "$@"
}
(( $+functions[_querypath__remove_commands] )) ||
_querypath__remove_commands() {
    local commands; commands=()
    _describe -t commands 'querypath remove commands' commands "$@"
}

if [ "$funcstack[1]" = "_querypath" ]; then
    _querypath "$@"
else
    compdef _querypath querypath
fi
